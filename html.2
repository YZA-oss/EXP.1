<!-- Bot√£o de Ajuda Flutuante -->
<div id="helpButton" style="position: fixed; bottom: 20px; right: 20px; width: 60px; height: 60px; background: #3498db; border-radius: 50%; display: flex; align-items: center; justify-content: center; cursor: pointer; box-shadow: 0 4px 15px rgba(0,0,0,0.2); z-index: 1000;">
    <span style="color: white; font-size: 24px;">ü§ñ</span>
</div>

<!-- Chatbot Modal -->
<div id="chatbotModal" style="display: none; position: fixed; bottom: 90px; right: 20px; width: 350px; height: 500px; background: white; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.3); z-index: 1001; flex-direction: column;">
    <!-- Cabe√ßalho -->
    <div style="background: #3498db; color: white; padding: 15px; border-radius: 15px 15px 0 0; display: flex; justify-content: space-between; align-items: center;">
        <h3 style="margin: 0;">Assistente do Site</h3>
        <button id="closeChat" style="background: none; border: none; color: white; font-size: 20px; cursor: pointer;">√ó</button>
    </div>
    
    <!-- Mensagens -->
    <div id="chatMessages" style="flex: 1; padding: 15px; overflow-y: auto; background: #f8f9fa;">
        <div class="message bot-message">
            <div class="message-content">
                Ol√°! Sou seu assistente para o Filtro de Planilhas Excel. Posso ajudar com:
                <br>‚Ä¢ Como usar os filtros
                <br>‚Ä¢ Formatos de arquivo suportados
                <br>‚Ä¢ Exporta√ß√£o de dados
                <br>‚Ä¢ Problemas comuns
                <br><br>Como posso ajudar?
            </div>
        </div>
    </div>
    
    <!-- Input -->
    <div style="padding: 15px; border-top: 1px solid #ddd; background: white; border-radius: 0 0 15px 15px;">
        <div style="display: flex; gap: 10px;">
            <input type="text" id="userInput" placeholder="Digite sua pergunta..." style="flex: 1; padding: 10px; border: 1px solid #ddd; border-radius: 20px; outline: none;">
            <button id="sendMessage" style="background: #3498db; color: white; border: none; border-radius: 20px; padding: 10px 20px; cursor: pointer;">Enviar</button>
        </div>
        
        <!-- Sugest√µes R√°pidas -->
        <div id="quickSuggestions" style="display: flex; flex-wrap: wrap; gap: 5px; margin-top: 10px;">
            <button class="suggestion-btn" data-question="Quais formatos de arquivo s√£o suportados?">Formatos suportados</button>
            <button class="suggestion-btn" data-question="Como aplicar filtros?">Como filtrar</button>
            <button class="suggestion-btn" data-question="Como exportar os dados?">Exportar dados</button>
        </div>
    </div>
</div>

<style>
    .message {
        margin-bottom: 15px;
        display: flex;
    }
    
    .user-message {
        justify-content: flex-end;
    }
    
    .bot-message {
        justify-content: flex-start;
    }
    
    .message-content {
        max-width: 80%;
        padding: 10px 15px;
        border-radius: 18px;
        font-size: 14px;
        line-height: 1.4;
    }
    
    .user-message .message-content {
        background: #3498db;
        color: white;
        border-bottom-right-radius: 5px;
    }
    
    .bot-message .message-content {
        background: white;
        color: #333;
        border: 1px solid #ddd;
        border-bottom-left-radius: 5px;
    }
    
    .suggestion-btn {
        background: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 15px;
        padding: 5px 10px;
        font-size: 12px;
        cursor: pointer;
        transition: all 0.3s;
    }
    
    .suggestion-btn:hover {
        background: #3498db;
        color: white;
        border-color: #3498db;
    }
    
    .typing-indicator {
        display: none;
        padding: 10px 15px;
        background: white;
        border: 1px solid #ddd;
        border-radius: 18px;
        border-bottom-left-radius: 5px;
        max-width: 80%;
    }
    
    .typing-dots {
        display: flex;
        gap: 3px;
    }
    
    .typing-dots span {
        width: 6px;
        height: 6px;
        background: #999;
        border-radius: 50%;
        animation: typing 1.4s infinite;
    }
    
    @keyframes typing {
        0%, 60%, 100% { transform: translateY(0); opacity: 0.4; }
        30% { transform: translateY(-5px); opacity: 1; }
    }
</style>

<script>
    // Base de conhecimento espec√≠fica para o site de planilhas
    const knowledgeBase = {
        // Sauda√ß√µes
        "saudacao": {
            patterns: ["ol√°", "oi", "ola", "hey", "e a√≠", "boa tarde", "boa noite", "bom dia"],
            responses: [
                "Ol√°! Sou o assistente do Filtro de Planilhas Excel. Como posso ajudar?",
                "Oi! Posso tirar d√∫vidas sobre como usar o filtro de planilhas. Em que posso ajudar?",
                "Ol√°! Estou aqui para ajudar com o sistema de filtros de Excel. Qual sua d√∫vida?"
            ]
        },
        
        // Formatos de arquivo
        "formatos": {
            patterns: ["formato", "formatos", "arquivo", "extens√£o", "xlsx", "xls", "qual arquivo", "tipo de arquivo"],
            responses: [
                "O sistema suporta os seguintes formatos de arquivo Excel:\n\n‚Ä¢ **.xlsx** (Excel Workbook)\n‚Ä¢ **.xls** (Excel 97-2003 Workbook)\n\nCertifique-se de que seu arquivo est√° em um desses formatos.",
                "Formatos aceitos:\n\nüìä .xlsx - Formato moderno do Excel\nüìä .xls - Formato legado do Excel\n\nSe seu arquivo estiver em outro formato, salve-o como .xlsx ou .xls primeiro."
            ]
        },
        
        // Upload
        "upload": {
            patterns: ["upload", "carregar", "enviar arquivo", "subir arquivo", "como carregar", "selecionar arquivo"],
            responses: [
                "Para fazer upload de uma planilha:\n\n1. Clique no bot√£o **'Selecionar Arquivo'**\n2. Escolha seu arquivo Excel (.xlsx ou .xls)\n3. Aguarde o processamento autom√°tico\n4. Os filtros ser√£o gerados automaticamente",
                "Passos para carregar sua planilha:\n\n‚Ä¢ Clique no bot√£o de upload azul\n‚Ä¢ Selecione o arquivo do seu computador\n‚Ä¢ O sistema processar√° automaticamente\n‚Ä¢ Em segundos, os dados estar√£o dispon√≠veis para filtro"
            ]
        },
        
        // Filtros
        "filtros": {
            patterns: ["filtro", "filtrar", "aplicar filtro", "como filtrar", "filtros", "filtrar dados"],
            responses: [
                "Para aplicar filtros:\n\n1. Ap√≥s carregar o arquivo, os filtros aparecer√£o automaticamente\n2. Cada coluna ter√° um menu suspenso\n3. Selecione o valor desejado em cada filtro\n4. Clique em **'Aplicar Filtros'**\n5. Use **'Limpar Filtros'** para voltar aos dados originais",
                "Como usar os filtros:\n\n‚Ä¢ Cada coluna da sua planilha vira um filtro\n‚Ä¢ Selecione valores espec√≠ficos nos menus suspensos\n‚Ä¢ Aplique m√∫ltiplos filtros simultaneamente\n‚Ä¢ Os dados s√£o filtrados em tempo real\n‚Ä¢ Use 'Limpar Filtros' para resetar"
            ]
        },
        
        // Exporta√ß√£o
        "exportar": {
            patterns: ["exportar", "baixar", "download", "salvar", "exportar dados", "como exportar"],
            responses: [
                "Para exportar os dados filtrados:\n\n1. Aplique os filtros desejados\n2. Clique no bot√£o **'Exportar Dados Filtrados'**\n3. Um arquivo Excel ser√° baixado automaticamente\n4. O arquivo conter√° apenas os dados que est√£o vis√≠veis na tabela",
                "Exporta√ß√£o de dados:\n\n‚Ä¢ Filtre os dados como necess√°rio\n‚Ä¢ Clique em 'Exportar Dados Filtrados'\n‚Ä¢ Download autom√°tico do arquivo 'dados_filtrados.xlsx'\n‚Ä¢ O arquivo exportado mant√©m a formata√ß√£o original"
            ]
        },
        
        // Problemas comuns
        "problemas": {
            patterns: ["erro", "problema", "n√£o funciona", "n√£o carrega", "d√° erro", "bug", "trava"],
            responses: [
                "Problemas comuns e solu√ß√µes:\n\n‚ùå **Arquivo n√£o carrega:** Verifique se √© .xlsx ou .xls\n‚ùå **Dados n√£o aparecem:** A planilha pode estar vazia\n‚ùå **Filtros n√£o funcionam:** Recarregue a p√°gina e tente novamente\n‚ùå **Exporta√ß√£o falha:** Verifique se h√° dados filtrados\n\nSe o problema persistir, tente usar um arquivo de exemplo primeiro.",
                "Solu√ß√µes para problemas frequentes:\n\n‚Ä¢ Arquivo muito grande? Tente dividir em planilhas menores\n‚Ä¢ Caracteres especiais? Verifique a codifica√ß√£o do arquivo\n‚Ä¢ C√©lulas mescladas? Desfa√ßa as mesclas antes de enviar\n‚Ä¢ F√≥rmulas complexas? Converta para valores antes do upload"
            ]
        },
        
        // Funcionalidades
        "funcionalidades": {
            patterns: ["o que faz", "funcionalidades", "recursos", "para que serve", "como funciona"],
            responses: [
                "Este site oferece:\n\n‚úÖ **Upload de planilhas** Excel (.xlsx, .xls)\n‚úÖ **Filtros din√¢micos** por coluna\n‚úÖ **Visualiza√ß√£o em tabela** dos dados\n‚úÖ **Exporta√ß√£o** dos dados filtrados\n‚úÖ **Interface responsiva** para mobile\n\n√â ideal para an√°lise r√°pida de dados sem precisar do Excel instalado.",
                "Principais recursos:\n\n‚Ä¢ Carregamento r√°pido de planilhas\n‚Ä¢ Filtros intuitivos por coluna\n‚Ä¢ Visualiza√ß√£o tabular dos dados\n‚Ä¢ Exporta√ß√£o para Excel\n‚Ä¢ Suporte a m√∫ltiplos formatos\n‚Ä¢ Interface amig√°vel e responsiva"
            ]
        },
        
        // Limita√ß√µes
        "limita√ß√µes": {
            patterns: ["limita√ß√£o", "tamanho", "m√°ximo", "quantas linhas", "limite", "restri√ß√£o"],
            responses: [
                "Limita√ß√µes atuais:\n\nüìè **Tamanho do arquivo:** Depende da mem√≥ria do navegador\nüìè **N√∫mero de linhas:** Recomendado at√© 10.000 linhas\nüìè **N√∫mero de colunas:** Sem limite pr√°tico\nüìè **Formata√ß√£o:** Apenas dados, sem formata√ß√£o visual\n\nPara arquivos muito grandes, considere dividi-los.",
                "Considera√ß√µes de uso:\n\n‚Ä¢ Arquivos muito grandes podem travar o navegador\n‚Ä¢ Apenas a primeira planilha √© processada\n‚Ä¢ F√≥rmulas s√£o convertidas para valores\n‚Ä¢ Formata√ß√£o de c√©lulas n√£o √© preservada\n‚Ä¢ Recomendado para an√°lise de dados puros"
            ]
        },
        
        // Fallback
        "fallback": {
            patterns: [],
            responses: [
                "Desculpe, n√£o entendi completamente. Posso ajudar com:\n‚Ä¢ Upload de arquivos Excel\n‚Ä¢ Aplica√ß√£o de filtros\n‚Ä¢ Exporta√ß√£o de dados\n‚Ä¢ Solu√ß√£o de problemas\n\nPode reformular sua pergunta?",
                "N√£o tenho uma resposta espec√≠fica para isso. Meu foco √© ajudar com:\n- Carregamento de planilhas\n- Filtragem de dados\n- Exporta√ß√£o de resultados\n- Problemas t√©cnicos\n\nComo posso ajudar nessas √°reas?"
            ]
        }
    };

    // Elementos do chatbot
    const helpButton = document.getElementById('helpButton');
    const chatbotModal = document.getElementById('chatbotModal');
    const closeChat = document.getElementById('closeChat');
    const chatMessages = document.getElementById('chatMessages');
    const userInput = document.getElementById('userInput');
    const sendMessage = document.getElementById('sendMessage');
    const quickSuggestions = document.getElementById('quickSuggestions');

    // Event Listeners
    helpButton.addEventListener('click', toggleChat);
    closeChat.addEventListener('click', toggleChat);
    sendMessage.addEventListener('click', handleUserMessage);
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') handleUserMessage();
    });

    // Sugest√µes r√°pidas
    document.querySelectorAll('.suggestion-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const question = e.target.getAttribute('data-question');
            userInput.value = question;
            handleUserMessage();
        });
    });

    function toggleChat() {
        if (chatbotModal.style.display === 'none' || !chatbotModal.style.display) {
            chatbotModal.style.display = 'flex';
            helpButton.style.display = 'none';
        } else {
            chatbotModal.style.display = 'none';
            helpButton.style.display = 'flex';
        }
    }

    function handleUserMessage() {
        const message = userInput.value.trim();
        if (!message) return;

        // Adicionar mensagem do usu√°rio
        addMessage(message, 'user');
        userInput.value = '';

        // Mostrar indicador de digita√ß√£o
        showTypingIndicator();

        // Processar ap√≥s um delay para simular pensamento
        setTimeout(() => {
            hideTypingIndicator();
            const response = getAIResponse(message);
            addMessage(response, 'bot');
        }, 1000);
    }

    function addMessage(content, sender) {
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${sender}-message`;
        
        const contentDiv = document.createElement('div');
        contentDiv.className = 'message-content';
        contentDiv.innerHTML = content.replace(/\n/g, '<br>');
        
        messageDiv.appendChild(contentDiv);
        chatMessages.appendChild(messageDiv);
        
        // Scroll para baixo
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function showTypingIndicator() {
        const typingDiv = document.createElement('div');
        typingDiv.className = 'message bot-message typing-indicator';
        typingDiv.id = 'typingIndicator';
        
        const contentDiv = document.createElement('div');
        contentDiv.className = 'message-content';
        contentDiv.innerHTML = '<div class="typing-dots"><span></span><span></span><span></span></div>';
        
        typingDiv.appendChild(contentDiv);
        chatMessages.appendChild(typingDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function hideTypingIndicator() {
        const typingIndicator = document.getElementById('typingIndicator');
        if (typingIndicator) {
            typingIndicator.remove();
        }
    }

    function getAIResponse(userMessage) {
        const message = userMessage.toLowerCase();
        
        // Buscar na base de conhecimento
        for (const [category, data] of Object.entries(knowledgeBase)) {
            for (const pattern of data.patterns) {
                if (message.includes(pattern)) {
                    const responses = data.responses;
                    return responses[Math.floor(Math.random() * responses.length)];
                }
            }
        }
        
        // Fallback
        const fallbackResponses = knowledgeBase.fallback.responses;
        return fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];
    }

    // Fechar modal clicando fora (opcional)
    document.addEventListener('click', (e) => {
        if (!chatbotModal.contains(e.target) && !helpButton.contains(e.target) && chatbotModal.style.display === 'flex') {
            toggleChat();
        }
    });
</script>
